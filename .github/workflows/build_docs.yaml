# from pyproj: https://github.com/pyproj4/pyproj/blob/master/.github/workflows/build_docs.yaml
name: Publish Docs

on:
  push:
    branches: [ master, develop ]

jobs:
  docs:
    name: Publish Docs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Fetch all Git tags
      run: git fetch --prune --unshallow --tags

    - name: Setup Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: ci/test_environment.yml
        cache-environment: false
        cache-downloads: false
        # persist on the same day.
        # cache-environment-key: environment-${{ steps.date.outputs.date }}
        # cache-downloads-key: downloads-${{ steps.date.outputs.date }}
        create-args: >-
          python=${{ matrix.python-version }}
        init-shell: >-
          bash

    - name: Conda info
      shell: bash -l {0}
      run: micromamba info
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        if [[ ! -d "$HOME/.local/bin" ]]; then
            mkdir -p "$HOME/.local/bin";
        fi
        # copy modflow bins to local dir to add to PATH later
        if [ "$RUNNER_OS" == "Windows" ]; then
            d="win"
        elif [ "$RUNNER_OS" == "macOS" ]; then
            d="mac"
        elif [ "$RUNNER_OS" == "Linux" ]; then
            d="linux"
        else
            d="unexpectedos"
            exit 1
        fi
        echo bin/$d/. >> $GITHUB_PATH
        echo $GITHUB_PATH
        pip install -e .
        python -m ipykernel install --user --name sfrmaker_ci --display-name "sfrmaker_ci"
    - name: Conda list
      shell: bash -l {0}
      run: micromamba list

    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -v --durations=20

    - name: Build docs
      shell: bash -l {0}
      run: |
        set -e
        make -C docs html

    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@v4.6.8
      if: ${{ github.event_name == 'push' }}
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: docs/build/html
        CLEAN: false
        TARGET_FOLDER: latest